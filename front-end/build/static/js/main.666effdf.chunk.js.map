{"version":3,"sources":["componenets/Footer.js","actions/userAction.js","constants/userConstants.js","componenets/SearchBox.js","componenets/Header.js","constants/orderConstants.js","componenets/Message.js","actions/cartAction.js","constants/cartConstants.js","screens/CartScreen.js","actions/productAction.js","constants/productConstants.js","componenets/Rating.js","componenets/Product.js","componenets/Loader.js","componenets/Paginate.js","componenets/ProductCarousel .js","screens/HomeScreen.js","componenets/FormContainer.js","screens/LoginScreen.js","screens/OrderListScreen.js","actions/orderAction.js","screens/OrderScreen.js","componenets/CheckoutSteps .js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/ProductEditScreen.js","screens/ProductListScreen.js","screens/ProductScreen.js","screens/ProfileScreen.js","screens/RegisterScreen.js","screens/ShippingAddressScreen.js","screens/UserEditScreen.js","screens/UserListScreen.js","App.js","serviceWorker.js","store.js","reducers/productReucer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","index.js"],"names":["Footer","Container","Row","Col","className","getUserProfile","id","dispatch","getState","a","type","config","headers","Authorization","userLogin","userInfo","token","axios","get","response","payload","data","errorMessage","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","event","preventDefault","trim","push","inline","xs","Control","name","value","onChange","e","target","placeholder","Button","variant","Header","disptach","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Message","children","Alert","defaultProps","addToCart","qty","product","_id","image","price","countInStock","setItem","JSON","stringify","cart","cartItems","console","warn","CartScreen","match","location","productId","params","quantity","search","Number","split","useEffect","removeFromCartHandler","md","length","ListGroup","map","item","key","sm","Image","src","alt","fluid","rounded","as","Array","keys","x","Card","reduce","acc","toFixed","disabled","listProducts","pageNumber","fetchProduct","Rating","text","color","style","prototype","PropTypes","string","isRequired","number","Product","Img","Body","Title","Text","rating","numReviews","Loader","Spinner","animation","role","width","height","margin","display","Paginate","pages","currentPage","Pagination","active","ProductCarousel","topRatedProducts","products","loading","error","Carousel","pause","Caption","HomeScreen","productList","lg","xl","FormContainer","LoginScreen","redirect","email","password","formData","setFormData","user","handleChange","post","login","Group","controlId","Label","OrderListScreen","orderListAdmin","orders","Table","striped","bordered","hover","responsive","order","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","OrderScreen","num","paypalSdkReady","setPaypalSdkReady","orderDetails","orderPay","successPay","success","loadingPay","orderDeliver","successDeliver","loadingDeliver","itemsPrice","orderItems","Math","round","addPaypalScript","clientId","script","document","createElement","async","body","appendChild","onload","matchOrderId","orderId","window","paypal","href","shippingAddress","address","city","postalCode","country","paymentMethod","index","shippingPrice","taxPrice","amount","onSuccess","paymentResult","log","put","payOrder","CheckoutSteps","step1","step2","step3","step4","PaymentScreen","setPaymentMethod","cartState","paymentMethodData","Check","label","checked","PlaceOrderScreen","orderCreate","addDecimals","orderData","ProductEditScreen","productDetails","productUpdate","successUpdate","loadingUpdate","errorUpdate","brand","category","description","uploading","setUploading","matchProductId","uploadFileHandler","file","files","fileFormData","FormData","append","updatedProduct","File","custom","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","successCreate","loadingCreate","errorCreate","deleteHandler","confirm","delete","deleteProduct","ProductScreen","productCreateReview","loadingReview","successReview","errorReview","setQuantity","comment","reviews","review","row","ProfileScreen","setMessage","confirmedPassword","userDetails","userProfileUpdateState","userProfileUpdate","orderListUser","loadingOrderList","errorOrderList","updatedUser","updatedUserInfo","RegisterScreen","userRegister","register","ShippingAddressScreen","shippingAddressData","required","UserEditScreen","matchUserId","elementName","userID","UserListScreen","userListAdmin","users","deleteError","userId","App","path","component","exact","Boolean","hostname","shippingAddressFromStorage","getItem","parse","cartItemsFromStorage","userInfoFromStorage","initalState","reducer","combineReducers","initialState","action","foundItem","find","filter","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.666effdf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; BatmanShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  USER_DELETE_ADMIN_FAIL,\r\n  USER_DELETE_ADMIN_REQUEST,\r\n  USER_DELETE_ADMIN_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_ADMIN_FAIL,\r\n  USER_LIST_ADMIN_REQUEST,\r\n  USER_LIST_ADMIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_ADMIN_FAIL,\r\n  USER_UPDATE_ADMIN_REQUEST,\r\n  USER_UPDATE_ADMIN_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_USER_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const data = JSON.stringify({ email, password });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await axios.post(\"/api/users/login\", data, config);\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(response.data));\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_USER_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const data = JSON.stringify({ name, email, password });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await axios.post(\"/api/users/register\", data, config);\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(response.data));\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserProfile = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (updatedUser) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.put(\r\n      \"/api/users/profile\",\r\n      JSON.stringify(updatedUser),\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n\r\n    // dispatch user update profile reset\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUsers = () => async (dispatch, getState) => {\r\n  dispatch({ type: USER_LIST_ADMIN_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(\"/api/users/\", config);\r\n    dispatch({\r\n      type: USER_LIST_ADMIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_LIST_ADMIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userID) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DELETE_ADMIN_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${userID}`, config);\r\n    dispatch({ type: USER_DELETE_ADMIN_SUCCESS, payload: userID });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    console.log(errorMessage);\r\n    dispatch({\r\n      type: USER_DELETE_ADMIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (updatedUser, userID) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({ type: USER_UPDATE_ADMIN_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.put(\r\n      `/api/users/${userID}`,\r\n      JSON.stringify(updatedUser),\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_UPDATE_ADMIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n\r\n    // dispatch user update ADMIN reset\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_UPDATE_ADMIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_ADMIN_REQUEST = \"USER_LIST_ADMIN_REQUEST\";\r\nexport const USER_LIST_ADMIN_SUCCESS = \"USER_LIST_ADMIN_SUCCESS\";\r\nexport const USER_LIST_ADMIN_FAIL = \"USER_LIST_ADMIN_FAIL\";\r\n\r\nexport const USER_DELETE_ADMIN_REQUEST = \"USER_DELETE_ADMIN_REQUEST\";\r\nexport const USER_DELETE_ADMIN_SUCCESS = \"USER_DELETE_ADMIN_SUCCESS\";\r\nexport const USER_DELETE_ADMIN_FAIL = \"USER_DELETE_ADMIN_FAIL\";\r\n\r\nexport const USER_UPDATE_ADMIN_REQUEST = \"USER_UPDATE_ADMIN_REQUEST\";\r\nexport const USER_UPDATE_ADMIN_SUCCESS = \"USER_UPDATE_ADMIN_SUCCESS\";\r\nexport const USER_UPDATE_ADMIN_FAIL = \"USER_UPDATE_ADMIN_FAIL\";\r\nexport const USER_UPDATE_ADMIN_RESET = \"USER_UPDATE_ADMIN_RESET\";\r\nexport const CLEAR_USER_UPDATE_SUCCESS = \"CLEAR_USER_UPDATE_SUCCESS\";\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n      setKeyword(\"\");\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Row>\r\n        <Col xs={8}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"q\"\r\n            value={keyword}\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder=\"Search Products...\"\r\n            className=\"mr-sm-2 ml-sm-5\"\r\n          ></Form.Control>\r\n        </Col>\r\n        <Col xs={4}>\r\n          <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n            Search\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userAction\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const disptach = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    disptach(logout());\r\n  };\r\n  const userState = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userState;\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to={\"/\"}>\r\n            <Navbar.Brand>Batman Shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to={\"/cart\"}>\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={handleLogout}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_USER_REQUEST = \"ORDER_LIST_USER_REQUEST\";\r\nexport const ORDER_LIST_USER_SUCCESS = \"ORDER_LIST_USER_SUCCESS\";\r\nexport const ORDER_LIST_USER_FAIL = \"ORDER_LIST_USER_FAIL\";\r\nexport const ORDER_LIST_USER_RESET = \"ORDER_LIST_USER_RESET\";\r\n\r\nexport const ORDER_LIST_ADMIN_REQUEST = \"ORDER_LIST_ADMIN_REQUEST\";\r\nexport const ORDER_LIST_ADMIN_SUCCESS = \"ORDER_LIST_ADMIN_SUCCESS\";\r\nexport const ORDER_LIST_ADMIN_FAIL = \"ORDER_LIST_ADMIN_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_ADD_PAYMENT_METHOD,\r\n  CART_ADD_SHIPPING_ADDRESS,\r\n  CART_REMOVE_ITEM,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  // fetch product\r\n  try {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        qty,\r\n      },\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"cartItems\",\r\n      JSON.stringify(getState().cart.cartItems)\r\n    );\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    console.warn(errorMessage);\r\n    // dispatch({\r\n    //   type: PRODUCT_DETAILS_FAIL,\r\n    //   payload: errorMessage,\r\n    // });\r\n  }\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const addShippingAddress = (shippingAddressData) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({\r\n    type: CART_ADD_SHIPPING_ADDRESS,\r\n    payload: shippingAddressData,\r\n  });\r\n\r\n  localStorage.setItem(\r\n    \"shippingAddress\",\r\n    JSON.stringify(getState().cart.shippingAddress)\r\n  );\r\n};\r\n\r\nexport const addPaymentMethod = (paymentMethodData) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({\r\n    type: CART_ADD_PAYMENT_METHOD,\r\n    payload: paymentMethodData,\r\n  });\r\n\r\n  localStorage.setItem(\r\n    \"paymentMethod\",\r\n    JSON.stringify(getState().cart.paymentMethod)\r\n  );\r\n};\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\nexport const CART_ADD_SHIPPING_ADDRESS = \"CART_ADD_SHIPPING_ADDRESS\";\r\nexport const CART_ADD_PAYMENT_METHOD = \"CART_ADD_PAYMENT_METHOD\";\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../componenets/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartAction\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const quantity = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, quantity));\r\n    }\r\n  }, [dispatch, productId, quantity]);\r\n\r\n  const removeFromCartHandler = (productId) => {\r\n    dispatch(removeFromCart(productId));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={3} sm={4}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3} sm={3} xs={8}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2} sm={2} xs={4}>\r\n                    ${item.price}\r\n                  </Col>\r\n                  <Col md={2} sm={2} xs={4}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2} sm={1} xs={4}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_ADMIN_REQUEST,\r\n  PRODUCT_DELETE_ADMIN_SUCCESS,\r\n  PRODUCT_DELETE_ADMIN_FAIL,\r\n  PRODUCT_CREATE_ADMIN_REQUEST,\r\n  PRODUCT_CREATE_ADMIN_SUCCESS,\r\n  PRODUCT_CREATE_ADMIN_FAIL,\r\n  PRODUCT_CREATE_ADMIN_RESET,\r\n  PRODUCT_UPDATE_ADMIN_REQUEST,\r\n  PRODUCT_UPDATE_ADMIN_SUCCESS,\r\n  PRODUCT_UPDATE_ADMIN_FAIL,\r\n  PRODUCT_UPDATE_ADMIN_RESET,\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  TOP_RATED_PRODUCTS_REQUEST,\r\n  TOP_RATED_PRODUCTS_SUCCESS,\r\n  TOP_RATED_PRODUCTS_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\r\n  dispatch\r\n) => {\r\n  // fetch products\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const response = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTopRatedProducts = () => async (dispatch) => {\r\n  // fetch products\r\n  try {\r\n    dispatch({ type: TOP_RATED_PRODUCTS_REQUEST });\r\n\r\n    const response = await axios.get(\"/api/products/top\");\r\n    dispatch({ type: TOP_RATED_PRODUCTS_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: TOP_RATED_PRODUCTS_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchProduct = (id) => async (dispatch) => {\r\n  // fetch product\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const response = await axios.get(`/api/products/${id}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetFetchProduct = () => (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_RESET });\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_ADMIN_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${productId}`, config);\r\n    dispatch({ type: PRODUCT_DELETE_ADMIN_SUCCESS });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_ADMIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_ADMIN_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.post(\"/api/products\", {}, config);\r\n    dispatch({ type: PRODUCT_CREATE_ADMIN_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_ADMIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetCreateProduct = () => (dispatch) => {\r\n  dispatch({ type: PRODUCT_CREATE_ADMIN_RESET });\r\n};\r\n\r\nexport const updateProduct = (updatedProduct, productId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({ type: PRODUCT_UPDATE_ADMIN_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.put(\r\n      `/api/products/${productId}`,\r\n      updatedProduct,\r\n      config\r\n    );\r\n    dispatch({ type: PRODUCT_UPDATE_ADMIN_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_ADMIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetUpdateProduct = () => (dispatch) => {\r\n  dispatch({ type: PRODUCT_UPDATE_ADMIN_RESET });\r\n};\r\n\r\nexport const createProductReview = (review, productId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n  // make request\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetProductReviewCreate = () => (dispatch) => {\r\n  dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n};\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\nexport const PRODUCT_DETAILS_RESET = \"PRODUCT_DETAILS_RESET\";\r\n\r\nexport const PRODUCT_DELETE_ADMIN_REQUEST = \"PRODUCT_DELETE_ADMIN_REQUEST\";\r\nexport const PRODUCT_DELETE_ADMIN_SUCCESS = \"PRODUCT_DELETE_ADMIN_SUCCESS\";\r\nexport const PRODUCT_DELETE_ADMIN_FAIL = \"PRODUCT_DELETE_ADMIN_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_ADMIN_REQUEST = \"PRODUCT_CREATE_ADMIN_REQUEST\";\r\nexport const PRODUCT_CREATE_ADMIN_SUCCESS = \"PRODUCT_CREATE_ADMIN_SUCCESS\";\r\nexport const PRODUCT_CREATE_ADMIN_FAIL = \"PRODUCT_CREATE_ADMIN_FAIL\";\r\nexport const PRODUCT_CREATE_ADMIN_RESET = \"PRODUCT_CREATE_ADMIN_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_ADMIN_REQUEST = \"PRODUCT_UPDATE_ADMIN_REQUEST\";\r\nexport const PRODUCT_UPDATE_ADMIN_SUCCESS = \"PRODUCT_UPDATE_ADMIN_SUCCESS\";\r\nexport const PRODUCT_UPDATE_ADMIN_FAIL = \"PRODUCT_UPDATE_ADMIN_FAIL\";\r\nexport const PRODUCT_UPDATE_ADMIN_RESET = \"PRODUCT_UPDATE_ADMIN_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\nexport const TOP_RATED_PRODUCTS_REQUEST = \"TOP_RATED_PRODUCTS_REQUEST\";\r\nexport const TOP_RATED_PRODUCTS_SUCCESS = \"TOP_RATED_PRODUCTS_SUCCESS\";\r\nexport const TOP_RATED_PRODUCTS_FAIL = \"TOP_RATED_PRODUCTS_FAIL\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n};\r\n\r\nRating.prototype = {\r\n  text: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ pages, currentPage, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/page/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === currentPage}>\r\n              {x + 1}\r\n            </Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport { getTopRatedProducts } from \"../actions/productAction\";\r\n\r\nconst ProductCarousel = () => {\r\n  const { products, loading, error } = useSelector(\r\n    (state) => state.topRatedProducts\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTopRatedProducts());\r\n  }, [dispatch]);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { listProducts, resetFetchProduct } from \"../actions/productAction\";\r\n\r\nimport Product from \"../componenets/Product\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport Message from \"../componenets/Message\";\r\nimport Paginate from \"../componenets/Paginate\";\r\nimport ProductCarousel from \"../componenets/ProductCarousel \";\r\nimport { Link } from \"react-router-dom\";\r\nconst HomeScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const state = useSelector((state) => state.productList);\r\n\r\n  const { loading, error, products, pages, currentPage } = state;\r\n\r\n  const { keyword, pageNumber } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(resetFetchProduct());\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h2>latest products</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Fragment>\r\n          <Row>\r\n            {/* <Col md={12}>\r\n              \r\n            </Col> */}\r\n            {products.map((product) => (\r\n              <Col key={product._id} md={6} lg={4} xl={3} xs={12}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate pages={pages} currentPage={currentPage} keyword={keyword} />\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../componenets/FormContainer\";\r\nimport Message from \"../componenets/Message\";\r\nimport Loader from \"../componenets/Loader\";\r\n\r\nimport { login } from \"../actions/userAction\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userLogin);\r\n  const { loading, userInfo, error } = user;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const { email, password } = formData;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { getAllOrders } from \"../actions/orderAction\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport Message from \"../componenets/Message\";\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const { orders, loading, error } = useSelector(\r\n    (state) => state.orderListAdmin\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getAllOrders());\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n  return (\r\n    <Fragment>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_LIST_ADMIN_FAIL,\r\n  ORDER_LIST_ADMIN_REQUEST,\r\n  ORDER_LIST_ADMIN_SUCCESS,\r\n  ORDER_LIST_USER_FAIL,\r\n  ORDER_LIST_USER_REQUEST,\r\n  ORDER_LIST_USER_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (orderData) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_CREATE_REQUEST });\r\n  // make request\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.post(\"/api/orders\", orderData, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderById = (orderId) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_DETAILS_REQUEST });\r\n  // make request\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(`/api/orders/${orderId}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({ type: ORDER_PAY_REQUEST });\r\n  // make request\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPayment = () => (dispatch) => {\r\n  dispatch({\r\n    type: ORDER_PAY_RESET,\r\n  });\r\n};\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_LIST_USER_REQUEST });\r\n  // make request\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(`/api/orders/user`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_USER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: ORDER_LIST_USER_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_LIST_ADMIN_REQUEST });\r\n  // make request\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.get(\"/api/orders\", config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_ADMIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: ORDER_LIST_ADMIN_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_DELIVER_REQUEST });\r\n  // make request\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.put(\r\n      `/api/orders/${orderId}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: errorMessage,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetOrderDeliver = () => (dispatch) => {\r\n  dispatch({\r\n    type: ORDER_DELIVER_RESET,\r\n  });\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deliverOrder,\r\n  getOrderById,\r\n  payOrder,\r\n  resetOrderDeliver,\r\n  resetPayment,\r\n} from \"../actions/orderAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../componenets/Message\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const [paypalSdkReady, setPaypalSdkReady] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { success: successPay, loading: loadingPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { success: successDeliver, loading: loadingDeliver } = orderDeliver;\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  if (order) {\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  const addPaypalScript = async () => {\r\n    const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n    let script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    script.onload = () => {\r\n      setPaypalSdkReady(true);\r\n    };\r\n  };\r\n\r\n  const matchOrderId = match.params.id;\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(matchOrderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(matchOrderId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch(resetPayment());\r\n      dispatch(resetOrderDeliver());\r\n      dispatch(getOrderById(matchOrderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPaypalScript();\r\n      } else {\r\n        setPaypalSdkReady(true);\r\n      }\r\n    }\r\n  }, [\r\n    history,\r\n    matchOrderId,\r\n    dispatch,\r\n    order,\r\n    successPay,\r\n    successDeliver,\r\n    userInfo,\r\n  ]);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Fragment>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!paypalSdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPaymentMethod } from \"../actions/cartAction\";\r\nimport CheckoutSteps from \"../componenets/CheckoutSteps \";\r\nimport FormContainer from \"../componenets/FormContainer\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"paypal\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cartState = useSelector((state) => state.cart);\r\n\r\n  useEffect(() => {\r\n    if (!cartState.shippingAddress) {\r\n      history.push(\"/shipping\");\r\n    }\r\n  }, [history, cartState.shippingAddress]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addPaymentMethod(paymentMethod));\r\n    if (cartState.paymentMethod) {\r\n      history.push(\"/placeorder\");\r\n    }\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value={paymentMethod}\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Row, Col, ListGroup, Image, Button, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderAction\";\r\nimport CheckoutSteps from \"../componenets/CheckoutSteps \";\r\nimport Message from \"../componenets/Message\";\r\nimport Loader from \"../componenets/Loader\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { order, loading, error } = useSelector((state) => state.orderCreate);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!cart.paymentMethod) {\r\n      history.push(\"/payment\");\r\n    }\r\n    if (!cart.shippingAddress) {\r\n      history.push(\"/shipping\");\r\n    }\r\n\r\n    if (order) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, cart.paymentMethod, cart.shippingAddress, order]);\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 100 : 0);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        taxPrice: cart.taxPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      {loading && <Loader />}\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"../componenets/Loader\";\r\nimport Message from \"../componenets/Message\";\r\nimport FormContainer from \"../componenets/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchProduct,\r\n  resetFetchProduct,\r\n  resetUpdateProduct,\r\n  updateProduct,\r\n} from \"../actions/productAction\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const { product, loading, error } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  const {\r\n    success: successUpdate,\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n  } = useSelector((state) => state.productUpdate);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    image: \"\",\r\n    brand: \"\",\r\n    countInStock: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const matchProductId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (successUpdate) {\r\n        history.push(\"/admin/productlist\");\r\n        dispatch(resetUpdateProduct());\r\n        dispatch(resetFetchProduct());\r\n      } else {\r\n        if (!product && !loading) {\r\n          dispatch(fetchProduct(matchProductId));\r\n        } else if (product && product._id !== matchProductId) {\r\n          dispatch(fetchProduct(matchProductId));\r\n        } else if (product) {\r\n          setFormData({\r\n            name: product.name,\r\n            price: product.price,\r\n            image: product.image,\r\n            brand: product.brand,\r\n            countInStock: product.countInStock,\r\n            category: product.category,\r\n            description: product.description,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    product,\r\n    loading,\r\n    matchProductId,\r\n    successUpdate,\r\n  ]);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(updateProduct(formData, matchProductId));\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const fileFormData = new FormData();\r\n    fileFormData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", fileFormData, config);\r\n\r\n      setFormData({\r\n        ...formData,\r\n        image: data,\r\n      });\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const {\r\n    name,\r\n    price,\r\n    image,\r\n    brand,\r\n    countInStock,\r\n    category,\r\n    description,\r\n  } = formData;\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                name=\"price\"\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                name=\"image\"\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                name=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                name=\"countInStock\"\r\n                type=\"number\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStock}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                name=\"category\"\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n  listProducts,\r\n  resetCreateProduct,\r\n} from \"../actions/productAction\";\r\nimport Message from \"../componenets/Message\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport Paginate from \"../componenets/Paginate\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const { pageNumber } = match.params;\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { products, loading, error, pages, currentPage } = useSelector(\r\n    (state) => state.productList\r\n  );\r\n\r\n  const { success, loading: loadingDelete, error: errorDelete } = useSelector(\r\n    (state) => state.productDelete\r\n  );\r\n\r\n  const {\r\n    success: successCreate,\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    product,\r\n  } = useSelector((state) => state.productCreate);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (successCreate) {\r\n        history.push(`/admin/product/${product._id}/edit`);\r\n        dispatch(resetCreateProduct());\r\n      } else {\r\n        dispatch(listProducts(\"\", pageNumber || 1));\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, dispatch, userInfo, success, successCreate, pageNumber]);\r\n\r\n  const deleteHandler = (productId) => {\r\n    if (window.confirm(\"Are you sure you wanna delete this product ?\")) {\r\n      dispatch(deleteProduct(productId));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} currentPage={currentPage} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Image,\r\n  ListGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../componenets/Rating\";\r\nimport {\r\n  createProductReview,\r\n  fetchProduct,\r\n  resetFetchProduct,\r\n  resetProductReviewCreate,\r\n} from \"../actions/productAction\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport Message from \"../componenets/Message\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state.productDetails);\r\n  const { product, loading, error } = state;\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const {\r\n    loading: loadingReview,\r\n    success: successReview,\r\n    error: errorReview,\r\n  } = useSelector((state) => state.productCreateReview);\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    rating: 0,\r\n    comment: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const matchProductId = match.params.id;\r\n  useEffect(() => {\r\n    if (successReview) {\r\n      setFormData({\r\n        rating: 0,\r\n        comment: \"\",\r\n      });\r\n      dispatch(resetProductReviewCreate());\r\n      dispatch(resetFetchProduct());\r\n    }\r\n    if (!product && !loading && !error) {\r\n      dispatch(fetchProduct(matchProductId));\r\n      dispatch(resetProductReviewCreate());\r\n    }\r\n  }, [dispatch, matchProductId, product, loading, error, successReview]);\r\n\r\n  const chooseQuantityHandler = (event) => {\r\n    setQuantity(event.target.value);\r\n  };\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${matchProductId}?qty=${quantity}`);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(createProductReview(formData, matchProductId));\r\n  };\r\n\r\n  const { rating, comment } = formData;\r\n  return (\r\n    <Fragment>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message>{error}</Message>\r\n      ) : product ? (\r\n        <Fragment>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Quantity:</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            onChange={chooseQuantityHandler}\r\n                            value={quantity}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (number) => (\r\n                                <option key={number} value={number + 1}>\r\n                                  {number + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      className=\"btn-block\"\r\n                      type={\"button\"}\r\n                      disabled={product.countInStock === 0}\r\n                      onClick={addToCartHandler}\r\n                    >\r\n                      Add to cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews && product.reviews.length === 0 && (\r\n                <Message>No Reviews</Message>\r\n              )}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorReview && (\r\n                    <Message variant=\"danger\">{errorReview}</Message>\r\n                  )}\r\n                  {loadingReview && <Loader />}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          name=\"rating\"\r\n                          value={rating}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Select...\r\n                          </option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          name=\"comment\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={handleChange}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type=\"submit\" variant=\"primary\">\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Form, Button, Table } from \"react-bootstrap\";\r\nimport Message from \"../componenets/Message\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getUserProfile, updateUserProfile } from \"../actions/userAction\";\r\nimport { getUserOrders } from \"../actions/orderAction\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [message, setMessage] = useState(null); // passowrd confirmation message\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmedPassword: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { user, loading, error } = useSelector((state) => state.userDetails);\r\n\r\n  const userProfileUpdateState = useSelector(\r\n    (state) => state.userProfileUpdate\r\n  );\r\n\r\n  const orderListUser = useSelector((state) => state.orderListUser);\r\n  const {\r\n    orders,\r\n    loading: loadingOrderList,\r\n    error: errorOrderList,\r\n  } = orderListUser;\r\n  useEffect(() => {\r\n    // check if user is logged in\r\n    if (!userInfo) {\r\n      // if no push him to login page\r\n      history.push(\"/\");\r\n    } else {\r\n      if (!user && !loading) {\r\n        // check if request to get profile is done\r\n        dispatch(getUserProfile(\"profile\"));\r\n        dispatch(getUserOrders());\r\n      } else if (user) {\r\n        setFormData({\r\n          ...formData,\r\n          name: user.name,\r\n          email: user.email,\r\n        });\r\n      }\r\n    }\r\n\r\n    // if yes get user profile\r\n    // eslint-disable-next-line\r\n  }, [dispatch, history, userInfo, user, loading]);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const { confirmedPassword, name, password, email } = formData;\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmedPassword) {\r\n      setMessage(\"passwords are not matched\");\r\n    } else {\r\n      dispatch(updateUserProfile({ name, email, password }));\r\n      if (userProfileUpdateState.success) {\r\n        setFormData({\r\n          ...formData,\r\n          name: userProfileUpdateState.updatedUserInfo.name,\r\n          email: userProfileUpdateState.updatedUserInfo.email,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h1>Sign In</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {userProfileUpdateState.error && (\r\n          <Message variant=\"danger\">{userProfileUpdateState.error}</Message>\r\n        )}\r\n        {userProfileUpdateState.success && (\r\n          <Message variant=\"success\">profile is updated</Message>\r\n        )}\r\n        {userProfileUpdateState.loading && <Loader />}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confiremedPassword\">\r\n            <Form.Label>Confirmed Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"confirmedPassword\"\r\n              placeholder=\"Enter confirmed password\"\r\n              value={confirmedPassword}\r\n              onChange={handleChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            update profile\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrderList ? (\r\n          <Loader />\r\n        ) : errorOrderList ? (\r\n          <Message variant=\"danger\">{errorOrderList}</Message>\r\n        ) : (\r\n          <Table striped bordered responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../componenets/FormContainer\";\r\nimport Message from \"../componenets/Message\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport { register } from \"../actions/userAction\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  const [message, setMessage] = useState(null); // passowrd confirmation message\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmedPassword: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userRegister);\r\n  const { loading, userInfo, error } = user;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const { name, confirmedPassword, email, password } = formData;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmedPassword) {\r\n      setMessage(\"passwords are not matched\");\r\n    } else {\r\n      setMessage(null);\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confiremedPassword\">\r\n          <Form.Label>Confirmed Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"confirmedPassword\"\r\n            placeholder=\"Enter confirmed password\"\r\n            value={confirmedPassword}\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addShippingAddress } from \"../actions/cartAction\";\r\nimport CheckoutSteps from \"../componenets/CheckoutSteps \";\r\nimport FormContainer from \"../componenets/FormContainer\";\r\n\r\nconst ShippingAddressScreen = ({ history }) => {\r\n  const [formData, setFormData] = useState({\r\n    address: \"\",\r\n    city: \"\",\r\n    postalCode: \"\",\r\n    country: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const shippingAddress = useSelector((state) => state.cart.shippingAddress);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addShippingAddress(formData));\r\n    if (shippingAddress) {\r\n      history.push(\"payment\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shippingAddress) {\r\n      const { address, city, postalCode, country } = shippingAddress;\r\n      setFormData({\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      });\r\n    }\r\n  }, [shippingAddress]);\r\n\r\n  const { address, city, postalCode, country } = formData;\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            name=\"address\"\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            onChange={handleChange}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            name=\"city\"\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            onChange={handleChange}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            name=\"postalCode\"\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            onChange={handleChange}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            name=\"country\"\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            onChange={handleChange}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingAddressScreen;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Loader from \"../componenets/Loader\";\r\nimport Message from \"../componenets/Message\";\r\nimport FormContainer from \"../componenets/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserProfile, updateUser } from \"../actions/userAction\";\r\nimport { CLEAR_USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    user,\r\n    error,\r\n    loading,\r\n    errorUpdate,\r\n    loadingUpdate,\r\n    successUpdate,\r\n  } = useSelector((state) => state.userDetails);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    isAdmin: false,\r\n  });\r\n\r\n  const matchUserId = match.params.id;\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successUpdate) {\r\n      history.push(\"/admin/userlist\");\r\n      dispatch({ type: CLEAR_USER_UPDATE_SUCCESS });\r\n    } else {\r\n      if (!user && !loading) {\r\n        dispatch(getUserProfile(matchUserId));\r\n      }\r\n      if (user && user._id !== matchUserId) {\r\n        dispatch(getUserProfile(matchUserId));\r\n      }\r\n      if (user) {\r\n        setFormData({\r\n          name: user.name,\r\n          email: user.email,\r\n          isAdmin: user.isAdmin,\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, loading, matchUserId, successUpdate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(updateUser(formData, matchUserId));\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const elementName = event.target.name;\r\n    if (elementName === \"isAdmin\") {\r\n      setFormData({\r\n        ...formData,\r\n        [elementName]: event.target.checked,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [elementName]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n  const { name, email, isAdmin } = formData;\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                name=\"isAdmin\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={handleChange}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { deleteUser, getUsers } from \"../actions/userAction\";\r\nimport Loader from \"../componenets/Loader\";\r\nimport Message from \"../componenets/Message\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { users, loading, error, deleteError } = useSelector(\r\n    (state) => state.userListAdmin\r\n  );\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getUsers());\r\n      // dispatch({type : })\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  const deleteHandler = (userId) => {\r\n    // dispatch delete user\r\n    if (window.confirm(\"Are you sure yo wanna delete this user ? \")) {\r\n      dispatch(deleteUser(userId));\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Fragment>\r\n          {deleteError && <Message variant=\"danger\">{deleteError}</Message>}\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>EMAIL</th>\r\n                <th>ADMIN</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(user._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./componenets/Footer\";\nimport Header from \"./componenets/Header\";\nimport CartScreen from \"./screens/CartScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ShippingAddressScreen from \"./screens/ShippingAddressScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main>\n        <Container className=\"py-3\">\n          <Route path={\"/product/:id\"} component={ProductScreen} />\n          <Route path={\"/order/:id\"} component={OrderScreen} />\n          <Route path={\"/cart/:id?\"} component={CartScreen} />\n          <Route path={\"/login\"} component={LoginScreen} />\n          <Route path={\"/register\"} component={RegisterScreen} />\n          <Route path={\"/profile\"} component={ProfileScreen} />\n          <Route path={\"/shipping\"} component={ShippingAddressScreen} />\n          <Route path={\"/payment\"} component={PaymentScreen} />\n          <Route path={\"/placeorder\"} component={PlaceOrderScreen} />\n\n          <Route path={\"/admin/userlist\"} component={UserListScreen} />\n          <Route path={\"/admin/user/:id/edit\"} component={UserEditScreen} />\n\n          <Route\n            path={\"/admin/productlist\"}\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path={\"/admin/productlist/page/:pageNumber\"}\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path={\"/admin/product/:id/edit\"}\n            component={ProductEditScreen}\n          />\n\n          <Route path={\"/admin/orderlist\"} component={OrderListScreen} />\n\n          <Route path={\"/search/:keyword\"} component={HomeScreen} exact />\n\n          <Route\n            path={\"/search/:keyword/page/:pageNumber\"}\n            component={HomeScreen}\n            exact\n          />\n\n          <Route path={\"/page/:pageNumber\"} component={HomeScreen} exact />\n          <Route path={\"/\"} component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListAdminReducer,\r\n  orderListUserReducer,\r\n  orderPayReducer,\r\n} from \"./reducers/orderReducer\";\r\nimport {\r\n  productCreateReducer,\r\n  productCreateReviewReducer,\r\n  productDeleteReducer,\r\n  productDetailsReducer,\r\n  productListReducer,\r\n  productUpdateReducer,\r\n  topRatedProductsReducer,\r\n} from \"./reducers/productReucer\";\r\nimport {\r\n  userDetailsReducer,\r\n  userListAdminReducer,\r\n  userLoginReducer,\r\n  userProfileUpdateReducer,\r\n  userRegisterReducer,\r\n} from \"./reducers/userReducer\";\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : null;\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst paymentMeyhodFromStorage = localStorage.getItem(\"paymentMethod\")\r\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\r\n  : null;\r\n\r\nconst initalState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMeyhodFromStorage,\r\n  },\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n};\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  topRatedProducts: topRatedProductsReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userProfileUpdate: userProfileUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListUser: orderListUserReducer,\r\n  userListAdmin: userListAdminReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  orderListAdmin: orderListAdminReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  productCreateReview: productCreateReviewReducer,\r\n});\r\nconst middlewares = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initalState,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_CREATE_ADMIN_FAIL,\r\n  PRODUCT_CREATE_ADMIN_REQUEST,\r\n  PRODUCT_CREATE_ADMIN_RESET,\r\n  PRODUCT_CREATE_ADMIN_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_DELETE_ADMIN_FAIL,\r\n  PRODUCT_DELETE_ADMIN_REQUEST,\r\n  PRODUCT_DELETE_ADMIN_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_UPDATE_ADMIN_FAIL,\r\n  PRODUCT_UPDATE_ADMIN_REQUEST,\r\n  PRODUCT_UPDATE_ADMIN_RESET,\r\n  PRODUCT_UPDATE_ADMIN_SUCCESS,\r\n  TOP_RATED_PRODUCTS_FAIL,\r\n  TOP_RATED_PRODUCTS_REQUEST,\r\n  TOP_RATED_PRODUCTS_SUCCESS,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (\r\n  initialState = { products: [], error: null },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { ...initialState, loading: true };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        // ...initialState,\r\n        loading: false,\r\n        products: payload.products,\r\n        currentPage: payload.currentPage,\r\n        pages: payload.pages,\r\n      };\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return {\r\n        // ...initialState,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    default:\r\n      return { ...initialState };\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  initialState = { product: null },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: payload };\r\n\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case PRODUCT_DETAILS_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return { ...initialState };\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (\r\n  initialState = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PRODUCT_DELETE_ADMIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_DELETE_ADMIN_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_DELETE_ADMIN_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return { ...initialState };\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (\r\n  initialState = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PRODUCT_CREATE_ADMIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_CREATE_ADMIN_SUCCESS:\r\n      return { loading: false, success: true, product: payload };\r\n\r\n    case PRODUCT_CREATE_ADMIN_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case PRODUCT_CREATE_ADMIN_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return { ...initialState };\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (\r\n  initialState = { product: null },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PRODUCT_UPDATE_ADMIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_UPDATE_ADMIN_SUCCESS:\r\n      return { loading: false, success: true, product: payload };\r\n\r\n    case PRODUCT_UPDATE_ADMIN_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case PRODUCT_UPDATE_ADMIN_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return { ...initialState };\r\n  }\r\n};\r\n\r\nexport const productCreateReviewReducer = (initialState = {}, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const topRatedProductsReducer = (\r\n  initialState = { products: [], error: null },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case TOP_RATED_PRODUCTS_REQUEST:\r\n      return { loading: true };\r\n\r\n    case TOP_RATED_PRODUCTS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: payload,\r\n      };\r\n\r\n    case TOP_RATED_PRODUCTS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    default:\r\n      return { ...initialState };\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_ADD_SHIPPING_ADDRESS,\r\n  CART_ADD_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  initialState = { cartItems: [], shippingAddress: null, paymentMethod: null },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CART_ADD_ITEM:\r\n      // check if item in cart already\r\n      const foundItem = initialState.cartItems.find(\r\n        (item) => item.product === payload.product\r\n      );\r\n      if (foundItem) {\r\n        return {\r\n          ...initialState,\r\n          cartItems: initialState.cartItems.map((item) => {\r\n            if (item.product === payload.product) return payload;\r\n            return item;\r\n          }),\r\n        };\r\n      } else {\r\n        return {\r\n          ...initialState,\r\n          cartItems: [...initialState.cartItems, payload],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...initialState,\r\n        cartItems: initialState.cartItems.filter(\r\n          (item) => item.product !== payload\r\n        ),\r\n      };\r\n\r\n    case CART_ADD_SHIPPING_ADDRESS:\r\n      return {\r\n        ...initialState,\r\n        shippingAddress: payload,\r\n      };\r\n\r\n    case CART_ADD_PAYMENT_METHOD:\r\n      return {\r\n        ...initialState,\r\n        paymentMethod: payload,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n","import {\r\n  CLEAR_USER_UPDATE_SUCCESS,\r\n  USER_DELETE_ADMIN_FAIL,\r\n  USER_DELETE_ADMIN_REQUEST,\r\n  USER_DELETE_ADMIN_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_ADMIN_FAIL,\r\n  USER_LIST_ADMIN_REQUEST,\r\n  USER_LIST_ADMIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_ADMIN_FAIL,\r\n  USER_UPDATE_ADMIN_REQUEST,\r\n  USER_UPDATE_ADMIN_RESET,\r\n  USER_UPDATE_ADMIN_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (initialState = { userInfo: null }, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: payload,\r\n        error: null,\r\n      };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    case USER_LOGOUT:\r\n      return {\r\n        loading: false,\r\n        error: null,\r\n        userInfo: null,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (\r\n  initialState = { userInfo: null },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: payload,\r\n        error: null,\r\n      };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n        userInfo: null,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (\r\n  initialState = { user: null, successUpdate: false },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        successUpdate: false,\r\n      };\r\n\r\n    case USER_UPDATE_ADMIN_REQUEST:\r\n      return {\r\n        loadingUpdate: true,\r\n        user: initialState.user,\r\n      };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: payload,\r\n        error: null,\r\n      };\r\n\r\n    case USER_UPDATE_ADMIN_SUCCESS:\r\n      return {\r\n        loadingUpdate: false,\r\n        user: payload,\r\n        errorUpdate: null,\r\n        successUpdate: true,\r\n      };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    case USER_UPDATE_ADMIN_FAIL:\r\n      return {\r\n        loadingUpdate: false,\r\n        errorUpdate: payload,\r\n      };\r\n\r\n    case USER_DETAILS_RESET:\r\n    case USER_UPDATE_ADMIN_RESET:\r\n      return {\r\n        user: null,\r\n      };\r\n\r\n    case CLEAR_USER_UPDATE_SUCCESS:\r\n      return {\r\n        successUpdate: false,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const userProfileUpdateReducer = (\r\n  initialState = { updatedUserInfo: null, success: null },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        updatedUserInfo: payload,\r\n        success: true,\r\n        error: null,\r\n      };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n        success: false,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const userListAdminReducer = (initialState = { users: [] }, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LIST_ADMIN_REQUEST:\r\n    case USER_DELETE_ADMIN_REQUEST:\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n\r\n    case USER_LIST_ADMIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        users: payload,\r\n      };\r\n\r\n    case USER_LIST_ADMIN_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    case USER_DELETE_ADMIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        deleteError: null,\r\n        users: initialState.users.filter((user) => user._id !== payload),\r\n      };\r\n\r\n    case USER_DELETE_ADMIN_FAIL:\r\n      return {\r\n        loading: false,\r\n        deleteError: payload,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_LIST_ADMIN_FAIL,\r\n  ORDER_LIST_ADMIN_REQUEST,\r\n  ORDER_LIST_ADMIN_SUCCESS,\r\n  ORDER_LIST_USER_FAIL,\r\n  ORDER_LIST_USER_REQUEST,\r\n  ORDER_LIST_USER_RESET,\r\n  ORDER_LIST_USER_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (initialState = { order: null }, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: payload,\r\n      };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  initialState = { order: null, loading: true },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (initialState = {}, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n        success: false,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const orderListUserReducer = (initialState = { orders: [] }, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ORDER_LIST_USER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_USER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: payload,\r\n      };\r\n\r\n    case ORDER_LIST_USER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    case ORDER_LIST_USER_RESET:\r\n      return {\r\n        orders: [],\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const orderListAdminReducer = (\r\n  initialState = { orders: [] },\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ORDER_LIST_ADMIN_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_ADMIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: payload,\r\n      };\r\n\r\n    case ORDER_LIST_ADMIN_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    // case ORDER_LIST_ADMIN_RESET:\r\n    //   return {\r\n    //     orders: [],\r\n    //   };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (initialState = {}, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}